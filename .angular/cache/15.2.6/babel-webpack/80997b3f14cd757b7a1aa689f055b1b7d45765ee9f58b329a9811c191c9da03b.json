{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddEmployeeComponent = class AddEmployeeComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.employeeForm = this.fb.group({\n      profilePic: ['', Validators.required],\n      employeeName: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]],\n      gender: ['', Validators.required],\n      department: ['Department', Validators.required],\n      module: ['Module', Validators.required],\n      position: ['Position', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.pattern(\"^(?=.*[A-Z])(?=.*[!@#$%^&*()_+,\\-.?])(?=.{8,})[a-zA-Z0-9!@#$%^&*()_+,\\-.?]+$\")]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validators: this.MustMatch('password', 'confirmPassword')\n    });\n  }\n  MustMatch(password, confirmPassword) {\n    return fb => {\n      const password = fb.get('password');\n      const confirmPassword = fb.get('confrimPassword');\n      if (confirmPassword?.errors && !confirmPassword?.errors?.['mismatch']) return;\n      if (password?.value !== confirmPassword?.value) {\n        confirmPassword?.setErrors({\n          mismatch: true\n        });\n      } else confirmPassword?.setErrors(null);\n    };\n  }\n  get profilePic() {\n    return this.employeeForm.get('profilePic');\n  }\n  get employeeName() {\n    return this.employeeForm.get('employeeName');\n  }\n  get email() {\n    return this.employeeForm.get('email');\n  }\n  get phoneNumber() {\n    return this.employeeForm.get('phoneNumber');\n  }\n  get gender() {\n    return this.employeeForm.get('gender');\n  }\n  get department() {\n    return this.employeeForm.get('department');\n  }\n  get module() {\n    return this.employeeForm.get('module');\n  }\n  get position() {\n    return this.employeeForm.get('position');\n  }\n  get password() {\n    return this.employeeForm.get('password');\n  }\n  get confirmPassword() {\n    return this.employeeForm.get('confirmPassword');\n  }\n  onSubmit() {\n    console.log(\"HEloow\");\n    console.log(this.employeeForm.value);\n  }\n  onReset() {\n    this.employeeForm.reset();\n  }\n};\nAddEmployeeComponent = __decorate([Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css']\n})], AddEmployeeComponent);\nexport { AddEmployeeComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","AddEmployeeComponent","constructor","fb","ngOnInit","employeeForm","group","profilePic","required","employeeName","minLength","email","phoneNumber","pattern","gender","department","module","position","password","confirmPassword","validators","MustMatch","get","errors","value","setErrors","mismatch","onSubmit","console","log","onReset","reset","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/vishal.m/Learning/AngularTutorial/DBbook/src/app/admin/add-employee/add-employee.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css']\n})\nexport class AddEmployeeComponent implements OnInit {\n\n  employeeForm!: FormGroup;\n  submitted=false\n\n  constructor(private fb:FormBuilder){}\n\n  ngOnInit(): void {\n    this.employeeForm= this.fb.group({\n      profilePic:['',Validators.required],\n      employeeName: ['', [Validators.required,Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber:['',[Validators.required,Validators.pattern(/^\\d{10}$/)]],\n      gender:['',Validators.required],\n      department:['Department',Validators.required],\n      module:['Module',Validators.required],\n      position:['Position',Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6),Validators.pattern(\"^(?=.*[A-Z])(?=.*[!@#$%^&*()_+,\\-.?])(?=.{8,})[a-zA-Z0-9!@#$%^&*()_+,\\-.?]+$\")]],\n      confirmPassword: ['', Validators.required]\n  },{\n    validators:this.MustMatch('password','confirmPassword')\n  }\n  );\n  }\n\n  MustMatch(password:string,confirmPassword:string){\n    return(fb:FormGroup)=>{\n\n      const password=fb.get('password');\n      const confirmPassword=fb.get('confrimPassword');\n\n      if(confirmPassword?.errors&&!confirmPassword?.errors?.['mismatch'])\n          return;\n\n      if(password?.value!==confirmPassword?.value){\n        confirmPassword?.setErrors({mismatch:true});\n      }\n      else\n      confirmPassword?.setErrors(null);\n\n    }\n  }\n  get profilePic(){\n    return this.employeeForm.get('profilePic');\n  }\n  get employeeName(){\n    return this.employeeForm.get('employeeName');\n  }\n  get email(){\n    return this.employeeForm.get('email');\n  }\n  get phoneNumber(){\n    return this.employeeForm.get('phoneNumber');\n  }\n  get gender(){\n    return this.employeeForm.get('gender');\n  }\n  get department(){\n    return this.employeeForm.get('department');\n  }\n  get module(){\n    return this.employeeForm.get('module');\n  }\n  get position(){\n    return this.employeeForm.get('position');\n  }\n  get password(){\n    return this.employeeForm.get('password');\n  }\n  get confirmPassword(){\n    return this.employeeForm.get('confirmPassword');\n  }\n  \n  onSubmit(){\n    console.log(\"HEloow\")\n    console.log(this.employeeForm.value)\n  }\n\n  onReset(){\n    this.employeeForm.reset();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}