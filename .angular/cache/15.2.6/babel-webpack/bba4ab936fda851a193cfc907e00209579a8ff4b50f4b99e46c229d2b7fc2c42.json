{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AddRoomComponent_div_8_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"* room name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_8_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"*room name must be at least 6 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, AddRoomComponent_div_8_p_1_Template, 2, 0, \"p\", 34);\n    i0.ɵɵtemplate(2, AddRoomComponent_div_8_p_2_Template, 2, 0, \"p\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.roomName == null ? null : ctx_r0.roomName.errors == null ? null : ctx_r0.roomName.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.roomName == null ? null : ctx_r0.roomName.errors == null ? null : ctx_r0.roomName.errors[\"minlength\"]);\n  }\n}\nfunction AddRoomComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" Room type is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" * Access is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_59_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Capacity is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_59_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Capacity must be at least 1.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, AddRoomComponent_div_59_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, AddRoomComponent_div_59_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.capacity == null ? null : ctx_r3.capacity.errors == null ? null : ctx_r3.capacity.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.capacity == null ? null : ctx_r3.capacity.errors == null ? null : ctx_r3.capacity.errors[\"minlength\"]);\n  }\n}\nfunction AddRoomComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" Images are required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddRoomComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.roomBookingForm = this.formBuilder.group({\n      roomName: ['', [Validators.required, Validators.minLength(6)]],\n      roomType: ['', [Validators.required, Validators.minLength(3)]],\n      access: ['', Validators.required],\n      capacity: [null, [Validators.required, Validators.min(1)]],\n      images: ['', Validators.required]\n    });\n  }\n  get roomName() {\n    return this.roomBookingForm.get('roomName');\n  }\n  get roomType() {\n    return this.roomBookingForm.get('roomType');\n  }\n  get access() {\n    return this.roomBookingForm.get('access');\n  }\n  get capacity() {\n    return this.roomBookingForm.get('capacity');\n  }\n  get images() {\n    return this.roomBookingForm.get('images');\n  }\n  onSubmit() {\n    console.log(this.roomBookingForm.value);\n    // Add logic to send form data to backend for room booking\n  }\n}\n\nAddRoomComponent.ɵfac = function AddRoomComponent_Factory(t) {\n  return new (t || AddRoomComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAddRoomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddRoomComponent,\n  selectors: [[\"app-add-room\"]],\n  decls: 68,\n  vars: 6,\n  consts: [[1, \"container\"], [1, \"text-center\"], [1, \"needs-validation\", \"w-50\", \"mx-auto\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"roomName\", 1, \"form-control\", \"form-input\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"roomType\", 1, \"form-label\"], [\"id\", \"roomType\", \"formControlName\", \"roomType\", 1, \"form-control\", \"form-input\"], [\"value\", \"\"], [\"value\", \"Conference Room\"], [\"value\", \"Meeting Room\"], [\"value\", \"Training Room\"], [\"value\", \"Breakout Room\"], [\"value\", \"Board Room\"], [\"value\", \"Interview Room\"], [\"value\", \"Presentation Room\"], [\"value\", \"Video Conference Room\"], [\"value\", \"Focus Room\"], [\"value\", \"Collaboration Room\"], [\"for\", \"access\"], [\"id\", \"access\", \"formControlName\", \"access\", 1, \"select\", \"form-control\"], [\"value\", \"HOD\"], [\"value\", \"Team Lead\"], [\"value\", \"Intern\"], [\"value\", \"Product Lead\"], [\"value\", \"Project Manager\"], [\"value\", \"Engineer Manager\"], [\"for\", \"capacity\"], [\"type\", \"number\", \"id\", \"capacity\", \"formControlName\", \"capacity\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"images\"], [\"type\", \"file\", \"id\", \"images\", \"formControlName\", \"images\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"text-center\", \"px-5\", \"mt-3\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n  template: function AddRoomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Room Adding Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddRoomComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Room Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵtemplate(8, AddRoomComponent_div_8_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Room Type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 8)(13, \"option\", 9);\n      i0.ɵɵtext(14, \"-- Select Room Type --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 10);\n      i0.ɵɵtext(16, \"Conference Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 11);\n      i0.ɵɵtext(18, \"Meeting Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 12);\n      i0.ɵɵtext(20, \"Training Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 13);\n      i0.ɵɵtext(22, \"Breakout Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 14);\n      i0.ɵɵtext(24, \"Board Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 15);\n      i0.ɵɵtext(26, \"Interview Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 16);\n      i0.ɵɵtext(28, \"Presentation Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"option\", 17);\n      i0.ɵɵtext(30, \"Video Conference Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"option\", 18);\n      i0.ɵɵtext(32, \"Focus Room\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"option\", 19);\n      i0.ɵɵtext(34, \"Collaboration Room\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(35, AddRoomComponent_div_35_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 3)(37, \"label\", 20);\n      i0.ɵɵtext(38, \"Access:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"select\", 21)(40, \"option\", 9);\n      i0.ɵɵtext(41, \"Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"option\", 22);\n      i0.ɵɵtext(43, \"HOD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"option\", 23);\n      i0.ɵɵtext(45, \"Team Lead\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"option\", 24);\n      i0.ɵɵtext(47, \"Intern\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"option\", 25);\n      i0.ɵɵtext(49, \"Product Lead\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"option\", 26);\n      i0.ɵɵtext(51, \"Project Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"option\", 27);\n      i0.ɵɵtext(53, \"Engineer Manager\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(54, AddRoomComponent_div_54_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"div\", 3)(56, \"label\", 28);\n      i0.ɵɵtext(57, \"Capacity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(58, \"input\", 29);\n      i0.ɵɵtemplate(59, AddRoomComponent_div_59_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"div\", 3)(61, \"label\", 30);\n      i0.ɵɵtext(62, \"Images:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(63, \"input\", 31);\n      i0.ɵɵtemplate(64, AddRoomComponent_div_64_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(65, \"div\", 1)(66, \"button\", 32);\n      i0.ɵɵtext(67, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.roomBookingForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.roomName == null ? null : ctx.roomName.invalid) && ((ctx.roomName == null ? null : ctx.roomName.dirty) || (ctx.roomName == null ? null : ctx.roomName.touched)));\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngIf\", (ctx.roomType == null ? null : ctx.roomType.invalid) && ((ctx.roomType == null ? null : ctx.roomType.dirty) || ctx.roomType.touched));\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngIf\", (ctx.access == null ? null : ctx.access.invalid) && ((ctx.access == null ? null : ctx.access.dirty) || (ctx.access == null ? null : ctx.access.touched)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.capacity == null ? null : ctx.capacity.invalid) && ((ctx.capacity == null ? null : ctx.capacity.dirty) || (ctx.capacity == null ? null : ctx.capacity.touched)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.images == null ? null : ctx.images.invalid) && ((ctx.images == null ? null : ctx.images.dirty) || (ctx.images == null ? null : ctx.images.touched)));\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddRoomComponent","constructor","formBuilder","ngOnInit","roomBookingForm","group","roomName","required","minLength","roomType","access","capacity","min","images","get","onSubmit","console","log","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/vishal.m/Learning/AngularTutorial/DBbook/src/app/admin/add-room/add-room.component.ts","/home/vishal.m/Learning/AngularTutorial/DBbook/src/app/admin/add-room/add-room.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.css']\n})\nexport class AddRoomComponent implements OnInit {\n\n\n  roomBookingForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder){}\n  ngOnInit(): void {\n    this.roomBookingForm = this.formBuilder.group({\n      roomName: ['', [Validators.required, Validators.minLength(6)]],\n      roomType: ['', [Validators.required, Validators.minLength(3)]],\n      access: ['', Validators.required],\n      capacity: [null, [Validators.required, Validators.min(1)]],\n      images: ['', Validators.required]\n    });  \n  }\n\n  get roomName(){\n    return this.roomBookingForm.get('roomName');\n  }\n  get roomType(){\n    return this.roomBookingForm.get('roomType');\n  }\n  get access(){\n    return this.roomBookingForm.get('access');\n  }\n  get capacity(){\n    return this.roomBookingForm.get('capacity');\n  }\n  get images(){\n    return this.roomBookingForm.get('images');\n  }\n  \n\n  onSubmit() {\n    console.log(this.roomBookingForm.value);\n    // Add logic to send form data to backend for room booking\n  }\n\n}\n","<!-- <div class=\"container\">\n  <div class=\"row d-flex justify-content-center align-items-center \">\n    <div class=\"col\">\n      <div class=\"card card-registration my-4\">\n        <div class=\"row g-0 h-50\">\n          <div class=\"col-xl-6 d-none d-xl-block\">\n            <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/img4.webp\"\n              alt=\"Sample photo\" class=\"img-fluid rounded\"\n              style=\" width:100%;height: 79% !important;border-top-left-radius: .25rem; border-bottom-left-radius: .25rem;\" />\n          </div>\n          <div class=\"col-xl-6\">\n            <form [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"card-body p-md-5 text-black\">\n                <h5 class=\"mb-5 text-uppercase text-white w-50 rounded bg-danger mx-auto p-2 text-center\">Employee Add</h5 >\n\n                <div class=\"row \">\n                  <div class=\"col-md-6 mb-4\">\n                    <div class=\"form-outline mx-auto\">\n                      <label for=\"file-upload\" class=\"custom-file-upload form-label mt-2\">\n                        <i class=\"fa fa-cloud-upload text-primary\"></i> Upload profile pic\n                      </label>\n                      <input id=\"file-upload\" class=\"form-control form-control-lg\" type=\"file\" style=\"display: none;\"  (change)=\"selectFile($event)\" />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 mb-4\">\n                    <div class=\"form-outline border\">\n                      <input type=\"text\" id=\"employeename\" name=\"employeename\" class=\"form-control form-control-lg\" formControlName=\"employeeName\" />\n                      <label class=\"form-label\" for=\"employeename\">Employee name</label>\n                    </div>\n                    <div *ngIf=\"employeeName?.invalid && (employeeName?.dirty || employeeName?.touched)\" class=\"text-danger\">\n                      <p *ngIf=\"employeeName?.errors?.['required'] \">*name is must</p>\n                      <p *ngIf=\"employeeName?.errors?.['minlength'] \">*must be 6 character long</p>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6 mb-4\">\n                      <div class=\"form-outline border\">\n                        <input type=\"email\" id=\"email\" class=\"form-control form-control-lg\" formControlName=\"email\"/>\n                        <label class=\"form-label\" for=\"email\">Email</label>\n                      </div>\n                      <div *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\" class=\"text-danger\">\n                        <p *ngIf=\"email?.errors?.['required'] text-start\">*email is must</p>\n                        <p *ngIf=\"email?.errors?.['email']\">*email is invalid.</p>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6 mb-4\">\n                      <div class=\"form-outline border\">\n                        <input type=\"text\" id=\"phoneno\" class=\"form-control form-control-lg\" formControlName=\"phoneNumber\" />\n                        <label class=\"form-label\" for=\"phoneno\">Phone number</label>\n                      </div>\n                      <div *ngIf=\"phoneNumber?.invalid && (phoneNumber?.dirty || phoneNumber?.touched)\" class=\"text-danger\">\n                        <p *ngIf=\"phoneNumber?.errors?.['required']\">*phoneno is must</p>\n                        <p *ngIf=\"phoneNumber?.errors?.['pattern']\">*phoneno is invalid.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                \n\n                <div class=\"row\">\n                  <div class=\"col-md-6 mb-4\">\n\n                    <select class=\"select form-control\" formControlName=\"department\">\n                      <option value=\"Department\">Department</option>\n                      <option value=\"Product development\">Product development</option>\n                      <option value=\"Sales marketing\">Sales marketing</option>\n                      <option value=\"Finanace management\">Finanace management</option>\n                    </select>\n                    <div *ngIf=\"department?.invalid && (department?.dirty || department?.touched)\" class=\"text-danger\">\n                      <p *ngIf=\"department?.errors?.['required']\">*department is must</p>\n                    </div>\n\n                  </div>\n                  <div class=\"col-md-6 mb-4\">\n                    <select class=\"select form-control\" formControlName=\"module\">\n                      <option value=\"Module\" >Module</option>\n                      <option value=\"Core\">Core</option>\n                      <option value=\"Workflows\">Workflows</option>\n                      <option value=\"Payroll\">Payroll</option>\n                      <option value=\"Attandance\">Attandance</option>\n                      <option value=\"Recruitment\">Recruitment</option>\n                    </select>\n                    <div *ngIf=\"module?.invalid && (module?.dirty || module?.touched)\" class=\"text-danger\">\n                      <p *ngIf=\"module?.errors?.['required']\">*module is must</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col mb-4\">\n  \n                      <select class=\"select form-control\" formControlName=\"position\">\n                        <option value=\"Position\">Position</option>\n                        <option value=\"HOD\">HOD</option>\n                        <option value=\"Team Lead\">Team Lead</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Product Lead\">Product Lead</option>\n                        <option value=\"Project Manager\">Project Manager</option>\n                        <option value=\"Engineer Manager\">Engineer Manager</option>\n                      </select>\n                      <div *ngIf=\"position?.invalid && (position?.dirty || position?.touched)\" class=\"text-danger\">\n                        <p *ngIf=\"position?.errors?.['required']\">*position is must</p>\n                      </div>\n                    </div>\n                  </div>\n\n\n                <div class=\"d-flex justify-content-center pt-3\">\n                  <button type=\"button\" class=\"btn btn-danger btn-lg\">Reset all</button>\n                  <button type=\"submit\" class=\"btn btn-warning btn-lg ms-2\" [disabled]=\"(!employeeName?.valid) || (!email?.valid) || (!phoneNumber?.valid)|| (!password?.valid)|| (!confirmPassword?.valid) \">Submit form</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<div class=\"container\">\n  <h2 class=\"text-center\">Room Adding Form</h2>\n  <form [formGroup]=\"roomBookingForm\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation w-50 mx-auto\" >\n    <div class=\"form-group\">\n      <label class=\"form-label\" for=\"name\">Room Name:</label>\n      <input type=\"text\" class=\"form-control form-input\" id=\"name\" formControlName=\"roomName\">\n     <div class=\"text-danger\" *ngIf=\"roomName?.invalid && (roomName?.dirty || roomName?.touched)\">\n        <p *ngIf=\"roomName?.errors?.['required']\">* room name is required.</p>\n        <p *ngIf=\"roomName?.errors?.['minlength']\">*room name must be at least 6 characters long.</p>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"form-label\" for=\"roomType\">Room Type:</label>\n      <select class=\"form-control form-input\" id=\"roomType\" formControlName=\"roomType\" >\n        <option value=\"\">-- Select Room Type --</option>\n        <option value=\"Conference Room\">Conference Room</option>\n        <option value=\"Meeting Room\">Meeting Room</option>\n        <option value=\"Training Room\">Training Room</option>\n        <option value=\"Breakout Room\">Breakout Room</option>\n        <option value=\"Board Room\">Board Room</option>\n        <option value=\"Interview Room\">Interview Room</option>\n        <option value=\"Presentation Room\">Presentation Room</option>\n        <option value=\"Video Conference Room\">Video Conference Room</option>\n        <option value=\"Focus Room\">Focus Room</option>\n        <option value=\"Collaboration Room\">Collaboration Room</option>\n      </select>\n      <div class=\"text-danger\" *ngIf=\"roomType?.invalid && (roomType?.dirty || roomType.touched)\">\n        Room type is required.\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"access\">Access:</label>\n      <select class=\"select form-control\" id=\"access\" formControlName=\"access\" >\n          <option value=\"\">Position</option>\n          <option value=\"HOD\">HOD</option>\n          <option value=\"Team Lead\">Team Lead</option>\n          <option value=\"Intern\">Intern</option>\n          <option value=\"Product Lead\">Product Lead</option>\n          <option value=\"Project Manager\">Project Manager</option>\n          <option value=\"Engineer Manager\">Engineer Manager</option>\n      </select>\n      <div class=\"text-danger\" *ngIf=\"access?.invalid && (access?.dirty || access?.touched)\">\n        * Access is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"capacity\">Capacity:</label>\n      <input type=\"number\" class=\"form-control\" id=\"capacity\" formControlName=\"capacity\" required>\n      <div class=\"text-danger\" *ngIf=\"capacity?.invalid && (capacity?.dirty || capacity?.touched)\">\n        <div *ngIf=\"capacity?.errors?.['required']\">Capacity is required.</div>\n        <div *ngIf=\"capacity?.errors?.['minlength']\">Capacity must be at least 1.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"images\">Images:</label>\n      <input type=\"file\" class=\"form-control\" id=\"images\" formControlName=\"images\" required>\n      <div class=\"text-danger\" *ngIf=\"images?.invalid && (images?.dirty || images?.touched)\">\n        Images are required.\n      </div>\n    </div>\n    <div class=\"text-center\">\n      <button type=\"submit\" class=\"btn btn-primary text-center px-5 mt-3\">Submit</button>\n    </div>\n     </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}