{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddRoomComponent = class AddRoomComponent {\n  constructor(formBuilder, adminService) {\n    this.formBuilder = formBuilder;\n    this.adminService = adminService;\n  }\n  ngOnInit() {\n    this.roomBookingForm = this.formBuilder.group({\n      roomName: ['', [Validators.required, Validators.minLength(6)]],\n      roomType: ['', [Validators.required, Validators.minLength(3)]],\n      access: this.formBuilder.array([this.formBuilder.control('')], [Validators.maxLength(2)]),\n      capacity: [null, [Validators.required, Validators.min(1)]]\n    });\n    this.imageUploadForm = this.formBuilder.group({\n      images: this.formBuilder.array([], Validators.required)\n    });\n  }\n  get roomName() {\n    return this.roomBookingForm.get('roomName');\n  }\n  get roomType() {\n    return this.roomBookingForm.get('roomType');\n  }\n  get access() {\n    return this.roomBookingForm.get('access');\n  }\n  get capacity() {\n    return this.roomBookingForm.get('capacity');\n  }\n  get images() {\n    return this.imageUploadForm.get('images');\n  }\n  onFileChange(event) {\n    if (event.target.files && event.target.files.length) {\n      const files = event.target.files;\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          this.images.push(this.formBuilder.group({\n            name: file.name,\n            type: file.type,\n            size: file.size,\n            url: reader.result\n          }));\n        };\n      }\n    }\n  }\n  addImage() {\n    this.images.push(this.formBuilder.control(''));\n  }\n  addAccess() {\n    this.access.push(this.formBuilder.control(''));\n  }\n  onSubmit() {\n    const formData = new FormData();\n    for (let i = 0; i < this.images.length; i++) {\n      const image = this.images.at(i).value;\n      formData.append('images[]', image.file, image.name);\n    }\n    formData.append('roomObj', JSON.stringify(this.roomBookingForm.value));\n  }\n};\nAddRoomComponent = __decorate([Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.css']\n})], AddRoomComponent);\nexport { AddRoomComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","AddRoomComponent","constructor","formBuilder","adminService","ngOnInit","roomBookingForm","group","roomName","required","minLength","roomType","access","array","control","maxLength","capacity","min","imageUploadForm","images","get","onFileChange","event","target","files","length","i","file","reader","FileReader","readAsDataURL","onload","push","name","type","size","url","result","addImage","addAccess","onSubmit","formData","FormData","image","at","value","append","JSON","stringify","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/vishal.m/Learning/AngularTutorial/DBbook/src/app/admin/add-room/add-room.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.css']\n})\nexport class AddRoomComponent implements OnInit {\n\n\n  roomBookingForm!: FormGroup;\n  imageUploadForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,private adminService:Admin){}\n  ngOnInit(): void {\n    this.roomBookingForm = this.formBuilder.group({\n      roomName: ['', [Validators.required, Validators.minLength(6)]],\n      roomType: ['', [Validators.required, Validators.minLength(3)]],\n      access: this.formBuilder.array([this.formBuilder.control('')],[Validators.maxLength(2)]),\n      capacity: [null, [Validators.required, Validators.min(1)]] \n    });  \n    this.imageUploadForm = this.formBuilder.group({\n      images: this.formBuilder.array([], Validators.required)\n    });\n  }\n\n  get roomName(){\n    return this.roomBookingForm.get('roomName');\n  }\n  get roomType(){\n    return this.roomBookingForm.get('roomType');\n  }\n  get access(){\n    return this.roomBookingForm.get('access') as FormArray;\n  }\n  get capacity(){\n    return this.roomBookingForm.get('capacity');\n  }\n  get images(){\n    return this.imageUploadForm.get('images') as FormArray;\n  }\n\n  onFileChange(event: { target: { files: string | any[]; }; }) {\n    if (event.target.files && event.target.files.length) {\n      const files = event.target.files;\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          this.images.push(this.formBuilder.group({\n            name: file.name,\n            type: file.type,\n            size: file.size,\n            url: reader.result\n          }));\n        };\n      }\n    }\n  }\n  \n\n  addImage():void{\n    this.images.push(this.formBuilder.control(''))\n  }\n  addAccess():void{\n    this.access.push(this.formBuilder.control(''));\n  }\n  \n\n  onSubmit() {\n\n    const formData = new FormData();\n    for (let i = 0; i < this.images.length; i++) {\n      const image = this.images.at(i).value;\n      formData.append('images[]', image.file, image.name);\n    }\n    formData.append('roomObj',JSON.stringify(this.roomBookingForm.value))\n    \n    \n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}