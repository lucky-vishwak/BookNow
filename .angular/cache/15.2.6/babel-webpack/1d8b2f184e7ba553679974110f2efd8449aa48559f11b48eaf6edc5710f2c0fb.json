{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AddRoomComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AddRoomComponent_div_8_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, AddRoomComponent_div_8_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.roomBookingForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.roomBookingForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction AddRoomComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AddRoomComponent_div_13_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, AddRoomComponent_div_13_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.roomBookingForm.get(\"type\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.roomBookingForm.get(\"type\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction AddRoomComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Access is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Capacity is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_29_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Capacity must be at least 1.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddRoomComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AddRoomComponent_div_29_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, AddRoomComponent_div_29_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.roomBookingForm.get(\"capacity\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.roomBookingForm.get(\"capacity\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction AddRoomComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Images are required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddRoomComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.roomBookingForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      type: ['', [Validators.required, Validators.minLength(3)]],\n      access: ['', Validators.required],\n      capacity: [null, [Validators.required, Validators.min(1)]],\n      images: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    console.log(this.roomBookingForm.value);\n    // Add logic to send form data to backend for room booking\n  }\n}\n\nAddRoomComponent.ɵfac = function AddRoomComponent_Factory(t) {\n  return new (t || AddRoomComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAddRoomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddRoomComponent,\n  selectors: [[\"app-add-room\"]],\n  decls: 38,\n  vars: 6,\n  consts: [[1, \"container\"], [1, \"text-center\"], [\"novalidate\", \"\", 1, \"needs-validation\", \"w-50\", \"mx-auto\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"type\"], [\"type\", \"text\", \"id\", \"type\", \"formControlName\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"access\"], [\"id\", \"access\", \"formControlName\", \"access\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"Public\"], [\"value\", \"Private\"], [\"for\", \"capacity\"], [\"type\", \"number\", \"id\", \"capacity\", \"formControlName\", \"capacity\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"images\"], [\"type\", \"file\", \"id\", \"images\", \"formControlName\", \"images\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"text-center\", \"p-2\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function AddRoomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Room Adding Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddRoomComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵtemplate(8, AddRoomComponent_div_8_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵtemplate(13, AddRoomComponent_div_13_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Access:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 10)(18, \"option\", 11);\n      i0.ɵɵtext(19, \"-- Select Access --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 12);\n      i0.ɵɵtext(21, \"Public\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\", 13);\n      i0.ɵɵtext(23, \"Private\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(24, AddRoomComponent_div_24_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 14);\n      i0.ɵɵtext(27, \"Capacity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 15);\n      i0.ɵɵtemplate(29, AddRoomComponent_div_29_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 3)(31, \"label\", 16);\n      i0.ɵɵtext(32, \"Images:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 17);\n      i0.ɵɵtemplate(34, AddRoomComponent_div_34_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 1)(36, \"button\", 18);\n      i0.ɵɵtext(37, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.roomBookingForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.roomBookingForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.roomBookingForm.get(\"name\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.roomBookingForm.get(\"name\")) == null ? null : tmp_1_0.touched)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.roomBookingForm.get(\"type\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.roomBookingForm.get(\"type\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.roomBookingForm.get(\"type\")) == null ? null : tmp_2_0.touched)));\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.roomBookingForm.get(\"access\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.roomBookingForm.get(\"access\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.roomBookingForm.get(\"access\")) == null ? null : tmp_3_0.touched)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.roomBookingForm.get(\"capacity\")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = ctx.roomBookingForm.get(\"capacity\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.roomBookingForm.get(\"capacity\")) == null ? null : tmp_4_0.touched)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.roomBookingForm.get(\"images\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = ctx.roomBookingForm.get(\"images\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.roomBookingForm.get(\"images\")) == null ? null : tmp_5_0.touched)));\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddRoomComponent","constructor","formBuilder","ngOnInit","roomBookingForm","group","name","required","minLength","type","access","capacity","min","images","onSubmit","console","log","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/vishal.m/Learning/AngularTutorial/DBbook/src/app/admin/add-room/add-room.component.ts","/home/vishal.m/Learning/AngularTutorial/DBbook/src/app/admin/add-room/add-room.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-room',\n  templateUrl: './add-room.component.html',\n  styleUrls: ['./add-room.component.css']\n})\nexport class AddRoomComponent implements OnInit {\n\n\n  roomBookingForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder){}\n  ngOnInit(): void {\n    this.roomBookingForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      type: ['', [Validators.required, Validators.minLength(3)]],\n      access: ['', Validators.required],\n      capacity: [null, [Validators.required, Validators.min(1)]],\n      images: ['', Validators.required]\n    });\n    \n  }\n\n  onSubmit() {\n    console.log(this.roomBookingForm.value);\n    // Add logic to send form data to backend for room booking\n  }\n\n}\n","<!-- <div class=\"container\">\n  <div class=\"row d-flex justify-content-center align-items-center \">\n    <div class=\"col\">\n      <div class=\"card card-registration my-4\">\n        <div class=\"row g-0 h-50\">\n          <div class=\"col-xl-6 d-none d-xl-block\">\n            <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/img4.webp\"\n              alt=\"Sample photo\" class=\"img-fluid rounded\"\n              style=\" width:100%;height: 79% !important;border-top-left-radius: .25rem; border-bottom-left-radius: .25rem;\" />\n          </div>\n          <div class=\"col-xl-6\">\n            <form [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"card-body p-md-5 text-black\">\n                <h5 class=\"mb-5 text-uppercase text-white w-50 rounded bg-danger mx-auto p-2 text-center\">Employee Add</h5 >\n\n                <div class=\"row \">\n                  <div class=\"col-md-6 mb-4\">\n                    <div class=\"form-outline mx-auto\">\n                      <label for=\"file-upload\" class=\"custom-file-upload form-label mt-2\">\n                        <i class=\"fa fa-cloud-upload text-primary\"></i> Upload profile pic\n                      </label>\n                      <input id=\"file-upload\" class=\"form-control form-control-lg\" type=\"file\" style=\"display: none;\"  (change)=\"selectFile($event)\" />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 mb-4\">\n                    <div class=\"form-outline border\">\n                      <input type=\"text\" id=\"employeename\" name=\"employeename\" class=\"form-control form-control-lg\" formControlName=\"employeeName\" />\n                      <label class=\"form-label\" for=\"employeename\">Employee name</label>\n                    </div>\n                    <div *ngIf=\"employeeName?.invalid && (employeeName?.dirty || employeeName?.touched)\" class=\"text-danger\">\n                      <p *ngIf=\"employeeName?.errors?.['required'] \">*name is must</p>\n                      <p *ngIf=\"employeeName?.errors?.['minlength'] \">*must be 6 character long</p>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6 mb-4\">\n                      <div class=\"form-outline border\">\n                        <input type=\"email\" id=\"email\" class=\"form-control form-control-lg\" formControlName=\"email\"/>\n                        <label class=\"form-label\" for=\"email\">Email</label>\n                      </div>\n                      <div *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\" class=\"text-danger\">\n                        <p *ngIf=\"email?.errors?.['required'] text-start\">*email is must</p>\n                        <p *ngIf=\"email?.errors?.['email']\">*email is invalid.</p>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6 mb-4\">\n                      <div class=\"form-outline border\">\n                        <input type=\"text\" id=\"phoneno\" class=\"form-control form-control-lg\" formControlName=\"phoneNumber\" />\n                        <label class=\"form-label\" for=\"phoneno\">Phone number</label>\n                      </div>\n                      <div *ngIf=\"phoneNumber?.invalid && (phoneNumber?.dirty || phoneNumber?.touched)\" class=\"text-danger\">\n                        <p *ngIf=\"phoneNumber?.errors?.['required']\">*phoneno is must</p>\n                        <p *ngIf=\"phoneNumber?.errors?.['pattern']\">*phoneno is invalid.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                \n\n                <div class=\"row\">\n                  <div class=\"col-md-6 mb-4\">\n\n                    <select class=\"select form-control\" formControlName=\"department\">\n                      <option value=\"Department\">Department</option>\n                      <option value=\"Product development\">Product development</option>\n                      <option value=\"Sales marketing\">Sales marketing</option>\n                      <option value=\"Finanace management\">Finanace management</option>\n                    </select>\n                    <div *ngIf=\"department?.invalid && (department?.dirty || department?.touched)\" class=\"text-danger\">\n                      <p *ngIf=\"department?.errors?.['required']\">*department is must</p>\n                    </div>\n\n                  </div>\n                  <div class=\"col-md-6 mb-4\">\n                    <select class=\"select form-control\" formControlName=\"module\">\n                      <option value=\"Module\" >Module</option>\n                      <option value=\"Core\">Core</option>\n                      <option value=\"Workflows\">Workflows</option>\n                      <option value=\"Payroll\">Payroll</option>\n                      <option value=\"Attandance\">Attandance</option>\n                      <option value=\"Recruitment\">Recruitment</option>\n                    </select>\n                    <div *ngIf=\"module?.invalid && (module?.dirty || module?.touched)\" class=\"text-danger\">\n                      <p *ngIf=\"module?.errors?.['required']\">*module is must</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col mb-4\">\n  \n                      <select class=\"select form-control\" formControlName=\"position\">\n                        <option value=\"Position\">Position</option>\n                        <option value=\"HOD\">HOD</option>\n                        <option value=\"Team Lead\">Team Lead</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Product Lead\">Product Lead</option>\n                        <option value=\"Project Manager\">Project Manager</option>\n                        <option value=\"Engineer Manager\">Engineer Manager</option>\n                      </select>\n                      <div *ngIf=\"position?.invalid && (position?.dirty || position?.touched)\" class=\"text-danger\">\n                        <p *ngIf=\"position?.errors?.['required']\">*position is must</p>\n                      </div>\n                    </div>\n                  </div>\n\n\n                <div class=\"d-flex justify-content-center pt-3\">\n                  <button type=\"button\" class=\"btn btn-danger btn-lg\">Reset all</button>\n                  <button type=\"submit\" class=\"btn btn-warning btn-lg ms-2\" [disabled]=\"(!employeeName?.valid) || (!email?.valid) || (!phoneNumber?.valid)|| (!password?.valid)|| (!confirmPassword?.valid) \">Submit form</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<div class=\"container\">\n  <h2 class=\"text-center\">Room Adding Form</h2>\n  <form [formGroup]=\"roomBookingForm\" (ngSubmit)=\"onSubmit()\" class=\"needs-validation w-50 mx-auto\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" required>\n      <div class=\"invalid-feedback\" *ngIf=\"roomBookingForm.get('name')?.invalid && (roomBookingForm.get('name')?.dirty || roomBookingForm.get('name')?.touched)\">\n        <div *ngIf=\"roomBookingForm.get('name')?.errors?.['required']\">Name is required.</div>\n        <div *ngIf=\"roomBookingForm.get('name')?.errors?.['minlength']\">Name must be at least 3 characters long.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"type\">Type:</label>\n      <input type=\"text\" class=\"form-control\" id=\"type\" formControlName=\"type\" required>\n      <div class=\"invalid-feedback\" *ngIf=\"roomBookingForm.get('type')?.invalid && (roomBookingForm.get('type')?.dirty || roomBookingForm.get('type')?.touched)\">\n        <div *ngIf=\"roomBookingForm.get('type')?.errors?.['required']\">Type is required.</div>\n        <div *ngIf=\"roomBookingForm.get('type')?.errors?.['minlength']\">Type must be at least 3 characters long.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"access\">Access:</label>\n      <select class=\"form-control\" id=\"access\" formControlName=\"access\" required>\n        <option value=\"\">-- Select Access --</option>\n        <option value=\"Public\">Public</option>\n        <option value=\"Private\">Private</option>\n      </select>\n      <div class=\"invalid-feedback\" *ngIf=\"roomBookingForm.get('access')?.invalid && (roomBookingForm.get('access')?.dirty || roomBookingForm.get('access')?.touched)\">\n        Access is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"capacity\">Capacity:</label>\n      <input type=\"number\" class=\"form-control\" id=\"capacity\" formControlName=\"capacity\" required>\n      <div class=\"invalid-feedback\" *ngIf=\"roomBookingForm.get('capacity')?.invalid && (roomBookingForm.get('capacity')?.dirty || roomBookingForm.get('capacity')?.touched)\">\n        <div *ngIf=\"roomBookingForm.get('capacity')?.errors?.['required']\">Capacity is required.</div>\n        <div *ngIf=\"roomBookingForm.get('capacity')?.errors?.['minlength']\">Capacity must be at least 1.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"images\">Images:</label>\n      <input type=\"file\" class=\"form-control\" id=\"images\" formControlName=\"images\" required>\n      <div class=\"invalid-feedback\" *ngIf=\"roomBookingForm.get('images')?.invalid && (roomBookingForm.get('images')?.dirty || roomBookingForm.get('images')?.touched)\">\n        Images are required.\n      </div>\n    </div>\n    <div class=\"text-center\">\n      <button type=\"submit\" class=\"btn btn-primary text-center p-2\">Submit</button>\n \n    </div>\n     </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}